# Python CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-python/ for more details
version: 2.1
jobs:
  build:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            ls ./
            make install
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  test:
    docker: 
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            ls ./
            make install
      - run:
          name: run test lint
          command: |
            . venv/bin/activate
            make lint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  build-docker:
    docker:
      - image: cimg/go:1.20.3
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Build & push docker
          command: |
            chmod +x ./run_docker.sh
            chmod +x ./upload_docker.sh
            ./run_docker.sh
            ./upload_docker.sh
            
  deploy-infrastructure:
    docker:
      - image: cimg/aws:2023.04
    steps:
      - checkout
      - run:
          name: Ensure front-end infrastructure exist
          command: |
            cat ./.circleci/files/frontend.yml
            aws cloudformation deploy \
              --template-file ./.circleci/files/frontend.yml \
              --tags project=udapeople \
              --stack-name "udapeople-frontend-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"

  configure-infrastructure:
    docker:
      - image: python:3.11-rc-alpine
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible curl tar
            curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.8/2020-09-18/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            mv /tmp/eksctl /usr/local/bin
            eksctl version
      - run:
          name: Create cluster
          command: |
            export CLUSTER=$(eksctl get cluster --name cluster-udapeople)
            echo "Get cluster: ${CLUSTER}"
            if(( ${CLUSTER} ))
            then
              eksctl create cluster --name cluster-udapeople --region "$AWS_DEFAULT_REGION" --nodegroup-name cluster-udapeople --nodes 2 --ssh-access --ssh-public-key udapeople --managed
            fi
      

workflows:
  default:
    jobs:
      - build
      - test:
          requires: [build]
      - build-docker:
          requires: [test]
      - deploy-infrastructure:
          requires: [build-docker]
          filters:
            branches:
              only: [main]
      - configure-infrastructure:
          requires: [deploy-infrastructure]